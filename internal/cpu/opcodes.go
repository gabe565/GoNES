package cpu

import (
	"fmt"
)

// OpCode defines an opcode and its parameters.
//
// See [6502 Instruction Reference].
//
// [6502 Instruction Reference]: https://www.nesdev.org/obelisk-6502-guide/reference.html
type OpCode struct {
	Mnemonic     string
	Code         byte
	Len          uint8
	Cycles       uint8
	Mode         AddressingMode
	Exec         Instruction
	Undocumented bool
}

func (o OpCode) String() string {
	undocumented := ' '
	if o.Undocumented {
		undocumented = '*'
	}
	return fmt.Sprintf(
		"$%02X %c%3s %d %d %s",
		o.Code,
		undocumented,
		o.Mnemonic,
		o.Len,
		o.Cycles,
		o.Mode,
	)
}

// OpCodes is a list of supported opcodes.
//
// See [6502 Instruction Reference].
//
// [6502 Instruction Reference]: https://www.nesdev.org/obelisk-6502-guide/reference.html
//
//nolint:gochecknoglobals
var OpCodes = [...]*OpCode{
	0x00: {"BRK", 0x00, 1, 7, Implicit, brk, false},
	0x01: {"ORA", 0x01, 2, 6, IndirectX, ora, false},
	0x03: {"SLO", 0x03, 2, 8, IndirectX, slo, true},
	0x04: {"NOP", 0x04, 2, 3, ZeroPage, nop, true},
	0x05: {"ORA", 0x05, 2, 3, ZeroPage, ora, false},
	0x06: {"ASL", 0x06, 2, 5, ZeroPage, asl, false},
	0x07: {"SLO", 0x07, 2, 5, ZeroPage, slo, true},
	0x08: {"PHP", 0x08, 1, 3, Implicit, php, false},
	0x09: {"ORA", 0x09, 2, 2, Immediate, ora, false},
	0x0A: {"ASL", 0x0A, 1, 2, Accumulator, asl, false},
	0x0B: {"ANC", 0x0B, 2, 2, Immediate, anc, true},
	0x0C: {"NOP", 0x0C, 3, 4, Absolute, nop, true},
	0x0D: {"ORA", 0x0D, 3, 4, Absolute, ora, false},
	0x0E: {"ASL", 0x0E, 3, 6, Absolute, asl, false},
	0x0F: {"SLO", 0x0F, 3, 6, Absolute, slo, true},
	0x10: {"BPL", 0x10, 2, 2 /*+1 if branch succeeds, +2 if to a new page*/, Relative, bpl, false},
	0x11: {"ORA", 0x11, 2, 5 /*+1 if page crossed*/, IndirectY, ora, false},
	0x13: {"SLO", 0x13, 2, 8, IndirectY, slo, true},
	0x14: {"NOP", 0x14, 2, 4, ZeroPageX, nop, true},
	0x15: {"ORA", 0x15, 2, 4, ZeroPageX, ora, false},
	0x16: {"ASL", 0x16, 2, 6, ZeroPageX, asl, false},
	0x17: {"SLO", 0x17, 2, 6, ZeroPageX, slo, true},
	0x18: {"CLC", 0x18, 1, 2, Implicit, clc, false},
	0x19: {"ORA", 0x19, 3, 4 /*+1 if page crossed*/, AbsoluteY, ora, false},
	0x1A: {"NOP", 0x1A, 1, 2, Implicit, nop, true},
	0x1B: {"SLO", 0x1B, 3, 7, AbsoluteY, slo, true},
	0x1C: {"NOP", 0x1C, 3, 4 /*+1 if page crossed*/, AbsoluteX, nop, true},
	0x1D: {"ORA", 0x1D, 3, 4 /*+1 if page crossed*/, AbsoluteX, ora, false},
	0x1E: {"ASL", 0x1E, 3, 7, AbsoluteX, asl, false},
	0x1F: {"SLO", 0x1F, 3, 7, AbsoluteX, slo, true},
	0x20: {"JSR", 0x20, 3, 6, Implicit, jsr, false},
	0x21: {"AND", 0x21, 2, 6, IndirectX, and, false},
	0x23: {"RLA", 0x23, 2, 8, IndirectX, rla, true},
	0x24: {"BIT", 0x24, 2, 3, ZeroPage, bit, false},
	0x25: {"AND", 0x25, 2, 3, ZeroPage, and, false},
	0x26: {"ROL", 0x26, 2, 5, ZeroPage, rol, false},
	0x27: {"RLA", 0x27, 2, 5, ZeroPage, rla, true},
	0x28: {"PLP", 0x28, 1, 4, Implicit, plp, false},
	0x29: {"AND", 0x29, 2, 2, Immediate, and, false},
	0x2A: {"ROL", 0x2A, 1, 2, Accumulator, rol, false},
	0x2B: {"ANC", 0x2B, 2, 2, Immediate, anc, true},
	0x2C: {"BIT", 0x2C, 3, 4, Absolute, bit, false},
	0x2D: {"AND", 0x2D, 3, 4, Absolute, and, false},
	0x2E: {"ROL", 0x2E, 3, 6, Absolute, rol, false},
	0x2F: {"RLA", 0x2F, 3, 6, Absolute, rla, true},
	0x30: {"BMI", 0x30, 2, 2 /*+1 if branch succeeds, +2 if to a new page*/, Relative, bmi, false},
	0x31: {"AND", 0x31, 2, 5 /*+1 if page crossed*/, IndirectY, and, false},
	0x33: {"RLA", 0x33, 2, 8, IndirectY, rla, true},
	0x34: {"NOP", 0x34, 2, 4, ZeroPageX, nop, true},
	0x35: {"AND", 0x35, 2, 4, ZeroPageX, and, false},
	0x36: {"ROL", 0x36, 2, 6, ZeroPageX, rol, false},
	0x37: {"RLA", 0x37, 2, 6, ZeroPageX, rla, true},
	0x38: {"SEC", 0x38, 1, 2, Implicit, sec, false},
	0x39: {"AND", 0x39, 3, 4 /*+1 if page crossed*/, AbsoluteY, and, false},
	0x3A: {"NOP", 0x3A, 1, 2, Implicit, nop, true},
	0x3B: {"RLA", 0x3B, 3, 7, AbsoluteY, rla, true},
	0x3C: {"NOP", 0x3C, 3, 4 /*+1 if page crossed*/, AbsoluteX, nop, true},
	0x3D: {"AND", 0x3D, 3, 4 /*+1 if page crossed*/, AbsoluteX, and, false},
	0x3E: {"ROL", 0x3E, 3, 7, AbsoluteX, rol, false},
	0x3F: {"RLA", 0x3F, 3, 7, AbsoluteX, rla, true},
	0x40: {"RTI", 0x40, 1, 6, Implicit, rti, false},
	0x41: {"EOR", 0x41, 2, 6, IndirectX, eor, false},
	0x43: {"SRE", 0x43, 2, 8, IndirectX, sre, true},
	0x44: {"NOP", 0x44, 2, 3, ZeroPage, nop, true},
	0x45: {"EOR", 0x45, 2, 3, ZeroPage, eor, false},
	0x46: {"LSR", 0x46, 2, 5, ZeroPage, lsr, false},
	0x47: {"SRE", 0x47, 2, 5, ZeroPage, sre, true},
	0x48: {"PHA", 0x48, 1, 3, Implicit, pha, false},
	0x49: {"EOR", 0x49, 2, 2, Immediate, eor, false},
	0x4A: {"LSR", 0x4A, 1, 2, Accumulator, lsr, false},
	0x4B: {"ALR", 0x4B, 2, 2, Immediate, alr, true},
	0x4C: {"JMP", 0x4C, 3, 3, Absolute, jmp, false}, // Acts as immediate
	0x4D: {"EOR", 0x4D, 3, 4, Absolute, eor, false},
	0x4E: {"LSR", 0x4E, 3, 6, Absolute, lsr, false},
	0x4F: {"SRE", 0x4F, 3, 6, Absolute, sre, true},
	0x50: {"BVC", 0x50, 2, 2 /*+1 if branch succeeds, +2 if to a new page*/, Relative, bvc, false},
	0x51: {"EOR", 0x51, 2, 5 /*+1 if page crossed*/, IndirectY, eor, false},
	0x53: {"SRE", 0x53, 2, 8, IndirectY, sre, true},
	0x54: {"NOP", 0x54, 2, 4, ZeroPageX, nop, true},
	0x55: {"EOR", 0x55, 2, 4, ZeroPageX, eor, false},
	0x56: {"LSR", 0x56, 2, 6, ZeroPageX, lsr, false},
	0x57: {"SRE", 0x57, 2, 6, ZeroPageX, sre, true},
	0x58: {"CLI", 0x58, 1, 2, Implicit, cli, false},
	0x59: {"EOR", 0x59, 3, 4 /*+1 if page crossed*/, AbsoluteY, eor, false},
	0x5A: {"NOP", 0x5A, 1, 2, Implicit, nop, true},
	0x5B: {"SRE", 0x5B, 3, 7, AbsoluteY, sre, true},
	0x5C: {"NOP", 0x5C, 3, 4 /*+1 if page crossed*/, AbsoluteX, nop, true},
	0x5D: {"EOR", 0x5D, 3, 4 /*+1 if page crossed*/, AbsoluteX, eor, false},
	0x5E: {"LSR", 0x5E, 3, 7, AbsoluteX, lsr, false},
	0x5F: {"SRE", 0x5F, 3, 7, AbsoluteX, sre, true},
	0x60: {"RTS", 0x60, 1, 6, Implicit, rts, false},
	0x61: {"ADC", 0x61, 2, 6, IndirectX, adc, false},
	0x63: {"RRA", 0x63, 2, 8, IndirectX, rra, true},
	0x64: {"NOP", 0x64, 2, 3, ZeroPage, nop, true},
	0x65: {"ADC", 0x65, 2, 3, ZeroPage, adc, false},
	0x66: {"ROR", 0x66, 2, 5, ZeroPage, ror, false},
	0x67: {"RRA", 0x67, 2, 5, ZeroPage, rra, true},
	0x68: {"PLA", 0x68, 1, 4, Implicit, pla, false},
	0x69: {"ADC", 0x69, 2, 2, Immediate, adc, false},
	0x6A: {"ROR", 0x6A, 1, 2, Accumulator, ror, false},
	0x6B: {"ARR", 0x6B, 2, 2, Immediate, arr, true},
	0x6C: {"JMP", 0x6C, 3, 5, Indirect, jmp, false}, // Indirect with 6502 bug
	0x6D: {"ADC", 0x6D, 3, 4, Absolute, adc, false},
	0x6E: {"ROR", 0x6E, 3, 6, Absolute, ror, false},
	0x6F: {"RRA", 0x6F, 3, 6, Absolute, rra, true},
	0x70: {"BVS", 0x70, 2, 2 /*+1 if branch succeeds, +2 if to a new page*/, Relative, bvs, false},
	0x71: {"ADC", 0x71, 2, 5 /*+1 if page crossed*/, IndirectY, adc, false},
	0x73: {"RRA", 0x73, 2, 8, IndirectY, rra, true},
	0x74: {"NOP", 0x74, 2, 4, ZeroPageX, nop, true},
	0x75: {"ADC", 0x75, 2, 4, ZeroPageX, adc, false},
	0x76: {"ROR", 0x76, 2, 6, ZeroPageX, ror, false},
	0x77: {"RRA", 0x77, 2, 6, ZeroPageX, rra, true},
	0x78: {"SEI", 0x78, 1, 2, Implicit, sei, false},
	0x79: {"ADC", 0x79, 3, 4 /*+1 if page crossed*/, AbsoluteY, adc, false},
	0x7A: {"NOP", 0x7A, 1, 2, Implicit, nop, true},
	0x7B: {"RRA", 0x7B, 3, 7, AbsoluteY, rra, true},
	0x7C: {"NOP", 0x7C, 3, 4 /*+1 if page crossed*/, AbsoluteX, nop, true},
	0x7D: {"ADC", 0x7D, 3, 4 /*+1 if page crossed*/, AbsoluteX, adc, false},
	0x7E: {"ROR", 0x7E, 3, 7, AbsoluteX, ror, false},
	0x7F: {"RRA", 0x7F, 3, 7, AbsoluteX, rra, true},
	0x80: {"NOP", 0x80, 2, 2, Immediate, nop, true},
	0x81: {"STA", 0x81, 2, 6, IndirectX, sta, false},
	0x82: {"NOP", 0x82, 2, 2, Immediate, nop, true},
	0x83: {"SAX", 0x83, 2, 6, IndirectX, sax, true},
	0x84: {"STY", 0x84, 2, 3, ZeroPage, sty, false},
	0x85: {"STA", 0x85, 2, 3, ZeroPage, sta, false},
	0x86: {"STX", 0x86, 2, 3, ZeroPage, stx, false},
	0x87: {"SAX", 0x87, 2, 3, ZeroPage, sax, true},
	0x88: {"DEY", 0x88, 1, 2, Implicit, dey, false},
	0x89: {"NOP", 0x89, 2, 2, Immediate, nop, true},
	0x8A: {"TXA", 0x8A, 1, 2, Implicit, txa, false},
	0x8B: {"XAA", 0x8B, 2, 2, Immediate, xaa, true},
	0x8C: {"STY", 0x8C, 3, 4, Absolute, sty, false},
	0x8D: {"STA", 0x8D, 3, 4, Absolute, sta, false},
	0x8E: {"STX", 0x8E, 3, 4, Absolute, stx, false},
	0x8F: {"SAX", 0x8F, 3, 4, Absolute, sax, true},
	0x90: {"BCC", 0x90, 2, 2 /*+1 if branch succeeds, +2 if to a new page*/, Relative, bcc, false},
	0x91: {"STA", 0x91, 2, 6, IndirectY, sta, false},
	0x93: {"AHX", 0x93, 2, 6, IndirectY, ahx, true},
	0x94: {"STY", 0x94, 2, 4, ZeroPageX, sty, false},
	0x95: {"STA", 0x95, 2, 4, ZeroPageX, sta, false},
	0x96: {"STX", 0x96, 2, 4, ZeroPageY, stx, false},
	0x97: {"SAX", 0x97, 2, 4, ZeroPageY, sax, true},
	0x98: {"TYA", 0x98, 1, 2, Implicit, tya, false},
	0x99: {"STA", 0x99, 3, 5, AbsoluteY, sta, false},
	0x9A: {"TXS", 0x9A, 1, 2, Implicit, txs, false},
	0x9B: {"TAS", 0x9B, 3, 5, AbsoluteY, tas, true},
	0x9C: {"SHY", 0x9C, 3, 5, AbsoluteX, shy, true},
	0x9D: {"STA", 0x9D, 3, 5, AbsoluteX, sta, false},
	0x9E: {"SHX", 0x9E, 3, 5, AbsoluteY, shx, true},
	0x9F: {"AHX", 0x9F, 3, 5, AbsoluteY, ahx, true},
	0xA0: {"LDY", 0xA0, 2, 2, Immediate, ldy, false},
	0xA1: {"LDA", 0xA1, 2, 6, IndirectX, lda, false},
	0xA2: {"LDX", 0xA2, 2, 2, Immediate, ldx, false},
	0xA3: {"LAX", 0xA3, 2, 6, IndirectX, lax, true},
	0xA4: {"LDY", 0xA4, 2, 3, ZeroPage, ldy, false},
	0xA5: {"LDA", 0xA5, 2, 3, ZeroPage, lda, false},
	0xA6: {"LDX", 0xA6, 2, 3, ZeroPage, ldx, false},
	0xA7: {"LAX", 0xA7, 2, 3, ZeroPage, lax, true},
	0xA8: {"TAY", 0xA8, 1, 2, Implicit, tay, false},
	0xA9: {"LDA", 0xA9, 2, 2, Immediate, lda, false},
	0xAA: {"TAX", 0xAA, 1, 2, Implicit, tax, false},
	0xAB: {"LXA", 0xAB, 2, 2, Immediate, lxa, true},
	0xAC: {"LDY", 0xAC, 3, 4, Absolute, ldy, false},
	0xAD: {"LDA", 0xAD, 3, 4, Absolute, lda, false},
	0xAE: {"LDX", 0xAE, 3, 4, Absolute, ldx, false},
	0xAF: {"LAX", 0xAF, 3, 4, Absolute, lax, true},
	0xB0: {"BCS", 0xB0, 2, 2 /*+1 if branch succeeds, +2 if to a new page*/, Relative, bcs, false},
	0xB1: {"LDA", 0xB1, 2, 5 /*+1 if page crossed*/, IndirectY, lda, false},
	0xB3: {"LAX", 0xB3, 2, 5, IndirectY, lax, true},
	0xB4: {"LDY", 0xB4, 2, 4, ZeroPageX, ldy, false},
	0xB5: {"LDA", 0xB5, 2, 4, ZeroPageX, lda, false},
	0xB6: {"LDX", 0xB6, 2, 4, ZeroPageY, ldx, false},
	0xB7: {"LAX", 0xB7, 2, 4, ZeroPageY, lax, true},
	0xB8: {"CLV", 0xB8, 1, 2, Implicit, clv, false},
	0xB9: {"LDA", 0xB9, 3, 4 /*+1 if page crossed*/, AbsoluteY, lda, false},
	0xBA: {"TSX", 0xBA, 1, 2, Implicit, tsx, false},
	0xBB: {"LAS", 0xBB, 3, 4 /*+1 if page crossed*/, AbsoluteY, las, true},
	0xBC: {"LDY", 0xBC, 3, 4 /*+1 if page crossed*/, AbsoluteX, ldy, false},
	0xBD: {"LDA", 0xBD, 3, 4 /*+1 if page crossed*/, AbsoluteX, lda, false},
	0xBE: {"LDX", 0xBE, 3, 4 /*+1 if page crossed*/, AbsoluteY, ldx, false},
	0xBF: {"LAX", 0xBF, 3, 4 /*+1 if page crossed*/, AbsoluteY, lax, true},
	0xC0: {"CPY", 0xC0, 2, 2, Immediate, cpy, false},
	0xC1: {"CMP", 0xC1, 2, 6, IndirectX, cmp, false},
	0xC2: {"NOP", 0xC2, 2, 2, Immediate, nop, true},
	0xC3: {"DCP", 0xC3, 2, 8, IndirectX, dcp, true},
	0xC4: {"CPY", 0xC4, 2, 3, ZeroPage, cpy, false},
	0xC5: {"CMP", 0xC5, 2, 3, ZeroPage, cmp, false},
	0xC6: {"DEC", 0xC6, 2, 5, ZeroPage, dec, false},
	0xC7: {"DCP", 0xC7, 2, 5, ZeroPage, dcp, true},
	0xC8: {"INY", 0xC8, 1, 2, Implicit, iny, false},
	0xC9: {"CMP", 0xC9, 2, 2, Immediate, cmp, false},
	0xCA: {"DEX", 0xCA, 1, 2, Implicit, dex, false},
	0xCB: {"AXS", 0xCB, 2, 2, Immediate, axs, true},
	0xCC: {"CPY", 0xCC, 3, 4, Absolute, cpy, false},
	0xCD: {"CMP", 0xCD, 3, 4, Absolute, cmp, false},
	0xCE: {"DEC", 0xCE, 3, 6, Absolute, dec, false},
	0xCF: {"DCP", 0xCF, 3, 6, Absolute, dcp, true},
	0xD0: {"BNE", 0xD0, 2, 2 /*+1 if branch succeeds, +2 if to a new page*/, Relative, bne, false},
	0xD1: {"CMP", 0xD1, 2, 5 /*+1 if page crossed*/, IndirectY, cmp, false},
	0xD3: {"DCP", 0xD3, 2, 8, IndirectY, dcp, true},
	0xD4: {"NOP", 0xD4, 2, 4, ZeroPageX, nop, true},
	0xD5: {"CMP", 0xD5, 2, 4, ZeroPageX, cmp, false},
	0xD6: {"DEC", 0xD6, 2, 6, ZeroPageX, dec, false},
	0xD7: {"DCP", 0xD7, 2, 6, ZeroPageX, dcp, true},
	0xD8: {"CLD", 0xD8, 1, 2, Implicit, cld, false},
	0xD9: {"CMP", 0xD9, 3, 4 /*+1 if page crossed*/, AbsoluteY, cmp, false},
	0xDA: {"NOP", 0xDA, 1, 2, Implicit, nop, true},
	0xDB: {"DCP", 0xDB, 3, 7, AbsoluteY, dcp, true},
	0xDC: {"NOP", 0xDC, 3, 4 /*+1 if page crossed*/, AbsoluteX, nop, true},
	0xDD: {"CMP", 0xDD, 3, 4 /*+1 if page crossed*/, AbsoluteX, cmp, false},
	0xDE: {"DEC", 0xDE, 3, 7, AbsoluteX, dec, false},
	0xDF: {"DCP", 0xDF, 3, 7, AbsoluteX, dcp, true},
	0xE0: {"CPX", 0xE0, 2, 2, Immediate, cpx, false},
	0xE1: {"SBC", 0xE1, 2, 6, IndirectX, sbc, false},
	0xE2: {"NOP", 0xE2, 2, 2, Immediate, nop, true},
	0xE3: {"ISB", 0xE3, 2, 8, IndirectX, isb, true},
	0xE4: {"CPX", 0xE4, 2, 3, ZeroPage, cpx, false},
	0xE5: {"SBC", 0xE5, 2, 3, ZeroPage, sbc, false},
	0xE6: {"INC", 0xE6, 2, 5, ZeroPage, inc, false},
	0xE7: {"ISB", 0xE7, 2, 5, ZeroPage, isb, true},
	0xE8: {"INX", 0xE8, 1, 2, Implicit, inx, false},
	0xE9: {"SBC", 0xE9, 2, 2, Immediate, sbc, false},
	0xEA: {"NOP", 0xEA, 1, 2, Implicit, nop, false},
	0xEB: {"SBC", 0xEB, 2, 2, Immediate, sbc, true},
	0xEC: {"CPX", 0xEC, 3, 4, Absolute, cpx, false},
	0xED: {"SBC", 0xED, 3, 4, Absolute, sbc, false},
	0xEE: {"INC", 0xEE, 3, 6, Absolute, inc, false},
	0xEF: {"ISB", 0xEF, 3, 6, Absolute, isb, true},
	0xF0: {"BEQ", 0xF0, 2, 2 /*+1 if branch succeeds, +2 if to a new page*/, Relative, beq, false},
	0xF1: {"SBC", 0xF1, 2, 5 /*+1 if page crossed*/, IndirectY, sbc, false},
	0xF3: {"ISB", 0xF3, 2, 8, IndirectY, isb, true},
	0xF4: {"NOP", 0xF4, 2, 4, ZeroPageX, nop, true},
	0xF5: {"SBC", 0xF5, 2, 4, ZeroPageX, sbc, false},
	0xF6: {"INC", 0xF6, 2, 6, ZeroPageX, inc, false},
	0xF7: {"ISB", 0xF7, 2, 6, ZeroPageX, isb, true},
	0xF8: {"SED", 0xF8, 1, 2, Implicit, sed, false},
	0xF9: {"SBC", 0xF9, 3, 4 /*+1 if page crossed*/, AbsoluteY, sbc, false},
	0xFA: {"NOP", 0xFA, 1, 2, Implicit, nop, true},
	0xFB: {"ISB", 0xFB, 3, 7, AbsoluteY, isb, true},
	0xFC: {"NOP", 0xFC, 3, 4 /*+1 if page crossed*/, AbsoluteX, nop, true},
	0xFD: {"SBC", 0xFD, 3, 4 /*+1 if page crossed*/, AbsoluteX, sbc, false},
	0xFE: {"INC", 0xFE, 3, 7, AbsoluteX, inc, false},
	0xFF: {"ISB", 0xFF, 3, 7, AbsoluteX, isb, true},
}
