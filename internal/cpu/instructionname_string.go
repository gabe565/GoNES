// Code generated by "stringer -type InstructionName"; DO NOT EDIT.

package cpu

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BRK-0]
	_ = x[ORA-1]
	_ = x[SLO-2]
	_ = x[NOP-3]
	_ = x[ASL-4]
	_ = x[PHP-5]
	_ = x[ANC-6]
	_ = x[BPL-7]
	_ = x[CLC-8]
	_ = x[JSR-9]
	_ = x[AND-10]
	_ = x[RLA-11]
	_ = x[BIT-12]
	_ = x[ROL-13]
	_ = x[PLP-14]
	_ = x[BMI-15]
	_ = x[SEC-16]
	_ = x[RTI-17]
	_ = x[EOR-18]
	_ = x[SRE-19]
	_ = x[LSR-20]
	_ = x[PHA-21]
	_ = x[ALR-22]
	_ = x[JMP-23]
	_ = x[BVC-24]
	_ = x[CLI-25]
	_ = x[RTS-26]
	_ = x[ADC-27]
	_ = x[RRA-28]
	_ = x[ROR-29]
	_ = x[PLA-30]
	_ = x[ARR-31]
	_ = x[BVS-32]
	_ = x[SEI-33]
	_ = x[STA-34]
	_ = x[SAX-35]
	_ = x[STY-36]
	_ = x[STX-37]
	_ = x[DEY-38]
	_ = x[TXA-39]
	_ = x[XAA-40]
	_ = x[BCC-41]
	_ = x[AHX-42]
	_ = x[TYA-43]
	_ = x[TXS-44]
	_ = x[TAS-45]
	_ = x[SHY-46]
	_ = x[SHX-47]
	_ = x[LDY-48]
	_ = x[LDA-49]
	_ = x[LDX-50]
	_ = x[LAX-51]
	_ = x[TAY-52]
	_ = x[TAX-53]
	_ = x[LXA-54]
	_ = x[BCS-55]
	_ = x[CLV-56]
	_ = x[TSX-57]
	_ = x[LAS-58]
	_ = x[CPY-59]
	_ = x[CMP-60]
	_ = x[DCP-61]
	_ = x[DEC-62]
	_ = x[INY-63]
	_ = x[DEX-64]
	_ = x[AXS-65]
	_ = x[BNE-66]
	_ = x[CLD-67]
	_ = x[CPX-68]
	_ = x[SBC-69]
	_ = x[ISB-70]
	_ = x[INC-71]
	_ = x[INX-72]
	_ = x[BEQ-73]
	_ = x[SED-74]
}

const _InstructionName_name = "BRKORASLONOPASLPHPANCBPLCLCJSRANDRLABITROLPLPBMISECRTIEORSRELSRPHAALRJMPBVCCLIRTSADCRRARORPLAARRBVSSEISTASAXSTYSTXDEYTXAXAABCCAHXTYATXSTASSHYSHXLDYLDALDXLAXTAYTAXLXABCSCLVTSXLASCPYCMPDCPDECINYDEXAXSBNECLDCPXSBCISBINCINXBEQSED"

var _InstructionName_index = [...]uint8{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 189, 192, 195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225}

func (i InstructionName) String() string {
	if i >= InstructionName(len(_InstructionName_index)-1) {
		return "InstructionName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InstructionName_name[_InstructionName_index[i]:_InstructionName_index[i+1]]
}
